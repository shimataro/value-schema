# https://help.github.com/en/articles/workflow-syntax-for-github-actions
name: Windows
on:
  push:
    branches:
    - "**"
    tags-ignore:
    - "*"

jobs:
  cjs:
    name: CommonJS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - windows-2019
        - windows-2022
        nodejs:
        - "4.0.0"
        - "6.0.0"
        - "8.0.0"
        - "10.0.0"
        - "12.0.0"
        - "14.0.0"
        - "16.0.0"
        - "18.0.0"
      fail-fast: false
    steps:
    - name: Checkout source codes
      uses: actions/checkout@v3
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodejs }}
    - name: Output versions
      run: |
        node -v
        npm -v
    - name: Cleanup
      run: node ./scripts/cleanup.js
    - name: Check syntax
      run: node ./dist/index.js
    - name: Install dependencies
      run: npm i --only=production
      working-directory: ./examples
    - name: Run example
      run: node ./example.js
      working-directory: ./examples
    - name: Run example (TypeScript/Babel compatible)
      run: node ./example-default.js
      working-directory: ./examples

  esm:
    name: ES Modules
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - windows-2019
        - windows-2022
        nodejs:
        - "8.6.0" # On Windows, v8.5.0 causes ERR_INVALID_PROTOCOL; https://github.com/nodejs/node/issues/15374
        - "10.0.0"
        - "12.0.0"
        - "14.0.0"
        - "16.0.0"
        - "18.0.0"
      fail-fast: false
    steps:
    - name: Checkout source codes
      uses: actions/checkout@v3
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodejs }}
    - name: Output versions
      run: |
        node -v
        npm -v
    - name: Cleanup
      run: node ./scripts/cleanup.js
    - name: Check syntax
      run: node --experimental-modules ./dist/index.mjs
    - name: Install dependencies
      run: npm i --only=production
      working-directory: ./examples
    - name: Run example
      run: node --experimental-modules ./example.mjs
      working-directory: ./examples

  conditional-exports:
    name: Conditional Exports
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - windows-2019
        - windows-2022
        nodejs:
        - "13.2.0" # always loads CommonJS
      fail-fast: false
    steps:
    - name: Checkout source codes
      uses: actions/checkout@v3
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodejs }}
    - name: Output versions
      run: |
        node -v
        npm -v
    - name: Cleanup
      run: node ./scripts/cleanup.js
    - name: Check syntax (CJS)
      run: node --experimental-conditional-exports ./dist/index.js
    - name: Check syntax (ESM)
      run: node --experimental-conditional-exports ./dist/index.mjs
    - name: Install dependencies
      run: npm i --only=production
      working-directory: ./examples
    - name: Run example (CJS)
      run: node --experimental-conditional-exports ./example.js
      working-directory: ./examples
    - name: Run example (CJS; TypeScript/Babel compatible)
      run: node --experimental-conditional-exports ./example-default.js
      working-directory: ./examples
    - name: Run example (ESM)
      run: node --experimental-conditional-exports ./example.mjs
      working-directory: ./examples

  typescript-3:
    name: TypeScript 3.x
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - windows-2019
        - windows-2022
        nodejs:
        - "4.0.0"
        - "6.0.0"
        - "8.0.0"
        - "10.0.0"
        - "12.0.0"
        - "14.0.0"
        - "16.0.0"
        - "18.0.0"
        typescript:
        - "3.5"
        - "3.6"
        - "3.7"
        - "3.8"
        - "3.9"
      fail-fast: false
    steps:
    - name: Checkout source codes
      uses: actions/checkout@v3
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodejs }}
    - name: Output versions
      run: |
        node -v
        npm -v
    - name: Cleanup
      run: node ./scripts/cleanup.js
    - name: Install dependencies
      run: |
        npm i
        npm i -D typescript@${{ matrix.typescript }}
      working-directory: ./examples
    - name: Build example
      run: npm run build-ts
      working-directory: ./examples
    - name: Run example
      run: node ./example.js
      working-directory: ./examples

  typescript-4:
    name: TypeScript 4.x
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - windows-2019
        - windows-2022
        nodejs:
        - "4.0.0"
        - "6.0.0"
        - "8.0.0"
        - "10.0.0"
        - "12.0.0"
        - "14.0.0"
        - "16.0.0"
        - "18.0.0"
        typescript:
        - "4.0"
        - "4.1"
        - "4.2"
        - "4.3"
        - "4.4"
        - "4.5"
        - "4.6"
        - "4.7"
        - "4.8"
        - "4.9"
      fail-fast: false
    steps:
    - name: Checkout source codes
      uses: actions/checkout@v3
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodejs }}
    - name: Output versions
      run: |
        node -v
        npm -v
    - name: Cleanup
      run: node ./scripts/cleanup.js
    - name: Install dependencies
      run: |
        npm i
        npm i -D typescript@${{ matrix.typescript }}
      working-directory: ./examples
    - name: Build example
      run: npm run build-ts
      working-directory: ./examples
    - name: Run example
      run: node ./example.js
      working-directory: ./examples

  deno:
    name: Deno
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - windows-2019
        - windows-2022
        deno:
        - "1.0.0"
        - "1.1.0"
        - "1.2.0"
        - "1.3.0"
        - "1.4.0"
        - "1.5.0"
        - "1.6.0"
        - "1.7.0"
        - "1.8.0"
        - "1.9.0"
        - "1.10.1"
        - "1.11.0"
        - "1.12.0"
        - "1.13.0"
        - "1.14.0"
        - "1.15.0"
        - "1.16.0"
        - "1.17.0"
        - "1.18.0"
        - "1.19.0"
        - "1.20.1"
        - "1.21.0"
        - "1.22.0"
        - "1.23.0"
        - "1.24.0"
        - "1.25.0"
        - "1.26.0"
        - "1.27.0"
        - "1.28.0"
      fail-fast: false
    steps:
    - name: Checkout source codes
      uses: actions/checkout@v3
    - name: Install Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: ${{ matrix.deno }}
    - name: Output versions
      run: deno --version
    - name: Check syntax
      run: deno run ./mod.ts
    - name: Run example
      run: deno run ./example-deno.ts
      working-directory: ./examples
